generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ------------------------------------------------------- User ------------------------------------------------------- //

model User {
  // 
  id String @id @default(uuid())

  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  profile UserCurriculumProfile?
}

// ------------------------------------------------------ Profile ------------------------------------------------------ //

model UserCurriculumProfile {
  // 
  id String @id @default(uuid())

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  header_profile UserProfileHeader?

  academic_education       UserProfileAcademicEducation[]
  professional_experiences UserProfileJobExperiences[]
  certificates             UserProfileCertificates[]
  projects                 UserProfileProjects[]
  languages                UserProfileLanguages[]
  stack                    UserProfileStack[]
}

model UserProfileHeader {
  // 
  id String @id @default(uuid())

  profileId String                @unique
  profile   UserCurriculumProfile @relation(fields: [profileId], references: [id])

  profile_name          String?
  profile_job_title     String?
  profile_img           String?
  profile_resume        String
  profile_location      String
  profile_phone         String
  profile_git_link      String
  profile_linkedin_link String
  profile_gmail_link    String
}

model UserProfileAcademicEducation {
  // 

  id String @id @default(uuid())

  profileId String
  profile   UserCurriculumProfile @relation(fields: [profileId], references: [id])

  institution String
  course      String
  type        String
  status      String
  modality    String
  from        DateTime
  to          DateTime
}

model UserProfileJobExperiences {
  // 

  id String @id @default(uuid())

  profileId String
  profile   UserCurriculumProfile @relation(fields: [profileId], references: [id])

  company_name String
  occupation   String
  from         DateTime
  to           DateTime
  resume       String
  current_job  Boolean
}

model UserProfileCertificates {
  // 

  id String @id @default(uuid())

  profileId String
  profile   UserCurriculumProfile @relation(fields: [profileId], references: [id])

  institution String
  course      String
  workload    Int
  link        String
}

model UserProfileProjects {
  // 

  id String @id @default(uuid())

  profileId String
  profile   UserCurriculumProfile @relation(fields: [profileId], references: [id])

  name   String
  resume String
  link   String
}

model UserProfileLanguages {
  // 

  id String @id @default(uuid())

  profileId String
  profile   UserCurriculumProfile @relation(fields: [profileId], references: [id])

  language String
  level    String
}

model UserProfileStack {
  // 

  id String @id @default(uuid())

  profileId String
  profile   UserCurriculumProfile @relation(fields: [profileId], references: [id])

  name String
}

// ------------------------------------------------------- ---- ------------------------------------------------------- //
